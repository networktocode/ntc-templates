Value Filldown Protocol (\w)
Value Filldown Type (\w{0,2})
Value Required,Filldown Network (\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})
Value Filldown Mask (\/\d{1,2})
Value Distance (\d+)
Value Metric (\d+)
Value NexthopIP (\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})
Value NexthopIf ([\w\-\/\.:]+)
Value Uptime ([0-9]{2}:[0-9]{2}:[0-9]{2})

Start
  ^Gateway.* -> Routes

Routes
  # For "is (variably )subnetted" line, capture mask, clear all values.
  ^\s+\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}${Mask}\sis -> Clear
  #
  # Match directly connected route with explicit mask
  ^${Protocol}(\s|\*)${Type}\s+${Network}${Mask}\sis\sdirectly\sconnected,\s${NexthopIf} -> Record
  #
  # Match directly connected route (mask is inherited from "is subnetted")
  ^${Protocol}(\s|\*)${Type}\s+${Network}\sis\sdirectly\sconnected,\s${NexthopIf} -> Record
  #
  # Match regular routes, with mask, where all data in same line
  ^${Protocol}(\s|\*)${Type}\s+${Network}${Mask}\s\[${Distance}\/${Metric}\]\svia\s${NexthopIP}(,\s${Uptime})?(,\s${NexthopIf})? -> Record
  #
  # Match regular route, all one line, where mask is learned from "is subnetted" line
  ^${Protocol}(\s|\*)${Type}\s+${Network}\s\[${Distance}\/${Metric}\]\svia\s${NexthopIP}(,\s${Uptime})?(,\s${NexthopIf})? -> Record
  #
  # Match regular routes where the network/mask is on the line above the rest of the route
  ^${Protocol}(\s|\*)${Type}\s+${Network}${Mask} -> Next
  #
  # Match regular routes where the network only (mask from subnetted line) is on the line above the rest of the route
  ^${Protocol}(\s|\*)${Type}\s+${Network} -> Next
  #
  # Match the rest of the route information on line below network (and possibly mask)
  ^\s+\[${Distance}\/${Metric}\]\svia\s${NexthopIP}(,\s${Uptime})?(,\s${NexthopIf})? -> Record
  #
  # Match load-balanced routes
  ^\s+\[${Distance}\/${Metric}\]\svia\s${NexthopIP} -> Record
  #
  # Clear all variables on empty lines
  ^\s* -> Clearall

EOF